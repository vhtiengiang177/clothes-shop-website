// <auto-generated />
using System;
using Infrastructure.Persistent;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace clothing_shop_website.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20211206171435_DatabaseV1")]
    partial class DatabaseV1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entity.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdTypeAccount")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("VerificationCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("IdTypeAccount");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Admin@gmail.com",
                            IdTypeAccount = 1,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "Admin2@gmail.com",
                            IdTypeAccount = 1,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "Staff@gmail.com",
                            IdTypeAccount = 2,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 4,
                            Email = "Staff2@gmail.com",
                            IdTypeAccount = 2,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 5,
                            Email = "Shipper@gmail.com",
                            IdTypeAccount = 3,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 6,
                            Email = "Shipper2@gmail.com",
                            IdTypeAccount = 3,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 7,
                            Email = "Customer@gmail.com",
                            IdTypeAccount = 4,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 8,
                            Email = "Custome2@gmail.com",
                            IdTypeAccount = 4,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 9,
                            Email = "Custome3@gmail.com",
                            IdTypeAccount = 4,
                            Password = "123456789Abc!",
                            State = 1,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 10,
                            Email = "Staff3@gmail.com",
                            IdTypeAccount = 2,
                            Password = "123456789Abc!",
                            State = 0,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 11,
                            Email = "Shipper3@gmail.com",
                            IdTypeAccount = 2,
                            Password = "123456789Abc!",
                            State = 0,
                            VerificationCode = 1
                        },
                        new
                        {
                            Id = 12,
                            Email = "Custome4@gmail.com",
                            IdTypeAccount = 4,
                            Password = "123456789Abc!",
                            State = 0,
                            VerificationCode = 1
                        });
                });

            modelBuilder.Entity("Domain.Entity.Cart", b =>
                {
                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdSize")
                        .HasColumnType("int");

                    b.Property<int>("IdColor")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdCustomer", "IdProduct", "IdSize", "IdColor");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            IdCustomer = 7,
                            IdProduct = 1,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 20
                        },
                        new
                        {
                            IdCustomer = 7,
                            IdProduct = 2,
                            IdSize = 2,
                            IdColor = 2,
                            Quantity = 20
                        },
                        new
                        {
                            IdCustomer = 7,
                            IdProduct = 3,
                            IdSize = 1,
                            IdColor = 4,
                            Quantity = 20
                        },
                        new
                        {
                            IdCustomer = 8,
                            IdProduct = 4,
                            IdSize = 1,
                            IdColor = 2,
                            Quantity = 20
                        },
                        new
                        {
                            IdCustomer = 8,
                            IdProduct = 5,
                            IdSize = 2,
                            IdColor = 3,
                            Quantity = 20
                        },
                        new
                        {
                            IdCustomer = 8,
                            IdProduct = 6,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 20
                        },
                        new
                        {
                            IdCustomer = 9,
                            IdProduct = 7,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 20
                        },
                        new
                        {
                            IdCustomer = 9,
                            IdProduct = 8,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 20
                        },
                        new
                        {
                            IdCustomer = 9,
                            IdProduct = 9,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 20
                        });
                });

            modelBuilder.Entity("Domain.Entity.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dress",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Denim",
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Shirt",
                            State = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 2,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sweater",
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 2,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Trousers",
                            State = 0
                        });
                });

            modelBuilder.Entity("Domain.Entity.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "White",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Black",
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Blue",
                            State = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Red",
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "Gray",
                            State = 0
                        });
                });

            modelBuilder.Entity("Domain.Entity.Customer", b =>
                {
                    b.Property<int>("IdAccount")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTypeCustomer")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAccount");

                    b.HasIndex("IdTypeCustomer");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            IdAccount = 7,
                            FirstName = "Tuấn",
                            IdTypeCustomer = 3,
                            LastName = "Võ Anh",
                            Point = 100
                        },
                        new
                        {
                            IdAccount = 8,
                            FirstName = "Như",
                            IdTypeCustomer = 2,
                            LastName = "Huỳnh",
                            Point = 200
                        },
                        new
                        {
                            IdAccount = 9,
                            FirstName = "Ân",
                            IdTypeCustomer = 1,
                            LastName = "Trần Văn",
                            Point = 300
                        },
                        new
                        {
                            IdAccount = 12,
                            FirstName = "Hiệp",
                            IdTypeCustomer = 1,
                            LastName = "Nguyễn Đức",
                            Point = 300
                        });
                });

            modelBuilder.Entity("Domain.Entity.DeliveryAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Wards")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdCustomer");

                    b.ToTable("DeliveryAddresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "50/1 Đặng Văn Bi",
                            District = "TP.Thủ Đức",
                            FirstName = "Tuấn",
                            IdCustomer = 7,
                            LastName = "Võ Anh",
                            Phone = "0324407774",
                            Province = "TP.HCM",
                            State = 1,
                            Wards = "Trường Thọ"
                        },
                        new
                        {
                            Id = 2,
                            Address = "KTX Khu B",
                            District = "TP.Thủ Đức",
                            FirstName = "Tú",
                            IdCustomer = 7,
                            LastName = "Võ Anh",
                            Phone = "0324407773",
                            Province = "TP.HCM",
                            State = 1,
                            Wards = "Linh Trung"
                        },
                        new
                        {
                            Id = 3,
                            Address = "KTX D2",
                            District = "TP.Thủ Đức",
                            FirstName = "Như",
                            IdCustomer = 8,
                            LastName = "Huỳnh",
                            Phone = "0324407772",
                            Province = "TP.HCM",
                            State = 1,
                            Wards = "Tăng Nhơn Phú"
                        },
                        new
                        {
                            Id = 4,
                            Address = "46/64",
                            District = "Quận 1",
                            FirstName = "Bảo",
                            IdCustomer = 8,
                            LastName = "Lê Nguyễn Gia",
                            Phone = "0324407771",
                            Province = "Đồng Nai",
                            State = 1,
                            Wards = "Phường 1"
                        },
                        new
                        {
                            Id = 5,
                            Address = "50/1 Đặng Văn Bi",
                            District = "TP.Thủ Đức",
                            FirstName = "Ân",
                            IdCustomer = 9,
                            LastName = "Trần Văn",
                            Phone = "0324407775",
                            Province = "TP.HCM",
                            State = 1,
                            Wards = "Trường Thọ"
                        },
                        new
                        {
                            Id = 6,
                            Address = "KTX Khu B",
                            District = "TP.Thủ Đức",
                            FirstName = "Anh",
                            IdCustomer = 9,
                            LastName = "Trần Thi Mai",
                            Phone = "0324407776",
                            Province = "TP.HCM",
                            State = 1,
                            Wards = "Linh Trung"
                        },
                        new
                        {
                            Id = 7,
                            Address = "KTX D2",
                            District = "TP.Thủ Đức",
                            FirstName = "Hiệp",
                            IdCustomer = 12,
                            LastName = "Nguyễn Đức",
                            Phone = "0324407777",
                            Province = "TP.HCM",
                            State = 1,
                            Wards = "Tăng Nhơn Phú"
                        },
                        new
                        {
                            Id = 8,
                            Address = "56/16",
                            District = "Long Điền",
                            FirstName = "Hiệp",
                            IdCustomer = 12,
                            LastName = "Nguyễn Đức",
                            Phone = "0324407777",
                            Province = "Bà Rịa-Vũng Tàu",
                            State = 1,
                            Wards = "Phước Hưng"
                        });
                });

            modelBuilder.Entity("Domain.Entity.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Domain.Entity.Log_Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdColor")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdSize")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Log_Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 1,
                            IdSize = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 1,
                            IdSize = 2,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 1,
                            IdSize = 3,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 2,
                            IdProduct = 2,
                            IdSize = 2,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 3,
                            IdProduct = 2,
                            IdSize = 2,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 6,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 4,
                            IdProduct = 3,
                            IdSize = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 7,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 2,
                            IdProduct = 4,
                            IdSize = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 8,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 3,
                            IdProduct = 5,
                            IdSize = 2,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 9,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 4,
                            IdProduct = 5,
                            IdSize = 2,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 10,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 6,
                            IdSize = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 11,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 7,
                            IdSize = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 12,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 8,
                            IdSize = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 13,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 9,
                            IdSize = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 14,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 10,
                            IdSize = 1,
                            Quantity = 100
                        },
                        new
                        {
                            Id = 15,
                            CreatedById = 1,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdColor = 1,
                            IdProduct = 11,
                            IdSize = 1,
                            Quantity = 100
                        });
                });

            modelBuilder.Entity("Domain.Entity.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomerIdAccount")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCompleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReceive")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DeliveryAddressId")
                        .HasColumnType("int");

                    b.Property<double>("FeeDelivery")
                        .HasColumnType("float");

                    b.Property<int>("IdAddress")
                        .HasColumnType("int");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int?>("IdPromotion")
                        .HasColumnType("int");

                    b.Property<int?>("IdShipper")
                        .HasColumnType("int");

                    b.Property<int?>("IdStaff")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<double>("TotalProductPrice")
                        .HasColumnType("float");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerIdAccount");

                    b.HasIndex("DeliveryAddressId");

                    b.HasIndex("IdPromotion");

                    b.HasIndex("IdStaff");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 1,
                            IdCustomer = 7,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 1,
                            TotalAmount = 10830000.0,
                            TotalProductPrice = 12000000.0,
                            TotalQuantity = 20
                        },
                        new
                        {
                            Id = 2,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 2,
                            IdCustomer = 7,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 2,
                            TotalAmount = 15420000.0,
                            TotalProductPrice = 17100000.0,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 3,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 3,
                            IdCustomer = 8,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 3,
                            TotalAmount = 7320000.0,
                            TotalProductPrice = 8100000.0,
                            TotalQuantity = 20
                        },
                        new
                        {
                            Id = 4,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 4,
                            IdCustomer = 8,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 4,
                            TotalAmount = 17310000.0,
                            TotalProductPrice = 19200000.0,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 5,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 4,
                            IdCustomer = 8,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 5,
                            TotalAmount = 17310000.0,
                            TotalProductPrice = 19200000.0,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 7,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 4,
                            IdCustomer = 8,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 1,
                            TotalAmount = 17310000.0,
                            TotalProductPrice = 19200000.0,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 8,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 4,
                            IdCustomer = 8,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 1,
                            TotalAmount = 17310000.0,
                            TotalProductPrice = 19200000.0,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 9,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 4,
                            IdCustomer = 8,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 2,
                            TotalAmount = 17310000.0,
                            TotalProductPrice = 19200000.0,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 10,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 4,
                            IdCustomer = 8,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 6,
                            TotalAmount = 17310000.0,
                            TotalProductPrice = 19200000.0,
                            TotalQuantity = 30
                        },
                        new
                        {
                            Id = 11,
                            DateCompleted = new DateTime(2021, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateOrder = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateReceive = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FeeDelivery = 30000.0,
                            IdAddress = 4,
                            IdCustomer = 9,
                            IdPromotion = 1,
                            IdShipper = 5,
                            IdStaff = 3,
                            State = 3,
                            TotalAmount = 15420000.0,
                            TotalProductPrice = 17100000.0,
                            TotalQuantity = 30
                        });
                });

            modelBuilder.Entity("Domain.Entity.OrderDetail", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdSize")
                        .HasColumnType("int");

                    b.Property<int>("IdColor")
                        .HasColumnType("int");

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("IdOrder", "IdProduct", "IdSize", "IdColor");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductId");

                    b.HasIndex("SizeId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            IdOrder = 1,
                            IdProduct = 1,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 10,
                            UnitPrice = 320000.0
                        },
                        new
                        {
                            IdOrder = 1,
                            IdProduct = 2,
                            IdSize = 2,
                            IdColor = 2,
                            Quantity = 10,
                            UnitPrice = 280000.0
                        },
                        new
                        {
                            IdOrder = 2,
                            IdProduct = 3,
                            IdSize = 1,
                            IdColor = 4,
                            Quantity = 15,
                            UnitPrice = 250000.0
                        },
                        new
                        {
                            IdOrder = 2,
                            IdProduct = 4,
                            IdSize = 1,
                            IdColor = 2,
                            Quantity = 15,
                            UnitPrice = 320000.0
                        },
                        new
                        {
                            IdOrder = 3,
                            IdProduct = 5,
                            IdSize = 2,
                            IdColor = 3,
                            Quantity = 10,
                            UnitPrice = 220000.0
                        },
                        new
                        {
                            IdOrder = 3,
                            IdProduct = 6,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 10,
                            UnitPrice = 195000.0
                        },
                        new
                        {
                            IdOrder = 4,
                            IdProduct = 7,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 15,
                            UnitPrice = 320000.0
                        },
                        new
                        {
                            IdOrder = 4,
                            IdProduct = 8,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 15,
                            UnitPrice = 320000.0
                        },
                        new
                        {
                            IdOrder = 5,
                            IdProduct = 3,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 15,
                            UnitPrice = 250000.0
                        },
                        new
                        {
                            IdOrder = 5,
                            IdProduct = 4,
                            IdSize = 1,
                            IdColor = 1,
                            Quantity = 15,
                            UnitPrice = 320000.0
                        });
                });

            modelBuilder.Entity("Domain.Entity.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdCategory")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("TotalBuy")
                        .HasColumnType("int");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.HasIndex("Sku")
                        .IsUnique()
                        .HasFilter("[Sku] IS NOT NULL");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Avocado Dress Set is so pretty",
                            IdCategory = 1,
                            Name = "Avocado Dress Set",
                            Sku = "123456789",
                            State = 1,
                            TotalBuy = 100,
                            UnitPrice = 100000.0
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ally Babydoll Dress is so pretty",
                            IdCategory = 1,
                            Name = "Ally Babydoll Dress",
                            Sku = "123456788",
                            State = 1,
                            TotalBuy = 10,
                            UnitPrice = 200000.0
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 4,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Baggy Jean is so pretty",
                            IdCategory = 2,
                            Name = "Baggy Jean",
                            Sku = "123456787",
                            State = 1,
                            TotalBuy = 200,
                            UnitPrice = 300000.0
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 4,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Short Jean is so pretty",
                            IdCategory = 2,
                            Name = "Short Jean",
                            Sku = "123456786",
                            State = 1,
                            TotalBuy = 300,
                            UnitPrice = 400000.0
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mori Shirt is so pretty",
                            IdCategory = 3,
                            Name = "Mori Shirt",
                            Sku = "123456785",
                            State = 1,
                            TotalBuy = 400,
                            UnitPrice = 500000.0
                        },
                        new
                        {
                            Id = 6,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yasmin Shirt is so pretty",
                            IdCategory = 3,
                            Name = "Yasmin Shirt",
                            Sku = "123456784",
                            State = 1,
                            TotalBuy = 500,
                            UnitPrice = 600000.0
                        },
                        new
                        {
                            Id = 7,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Aokosor Sweaters is so pretty",
                            IdCategory = 4,
                            Name = "Aokosor Sweaters",
                            Sku = "123456783",
                            State = 1,
                            TotalBuy = 10,
                            UnitPrice = 700000.0
                        },
                        new
                        {
                            Id = 8,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Hoodie is so pretty",
                            IdCategory = 4,
                            Name = "Hoodie",
                            Sku = "123456782",
                            State = 1,
                            TotalBuy = 10,
                            UnitPrice = 100000.0
                        },
                        new
                        {
                            Id = 9,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mella Khaki Pant is so pretty",
                            IdCategory = 5,
                            Name = "Mella Khaki Pant",
                            Sku = "123456781",
                            State = 0,
                            TotalBuy = 10,
                            UnitPrice = 800000.0
                        },
                        new
                        {
                            Id = 10,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Mochi Pants is so pretty",
                            IdCategory = 5,
                            Name = "Mochi Pants",
                            Sku = "123456780",
                            State = 0,
                            TotalBuy = 10,
                            UnitPrice = 900000.0
                        },
                        new
                        {
                            Id = 11,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "T-Shirt is so pretty",
                            IdCategory = 3,
                            Name = "T-Shirts",
                            Sku = "123456779",
                            State = 0,
                            TotalBuy = 10,
                            UnitPrice = 100000.0
                        });
                });

            modelBuilder.Entity("Domain.Entity.Product_Size_Color", b =>
                {
                    b.Property<int>("IdProduct")
                        .HasColumnType("int");

                    b.Property<int>("IdSize")
                        .HasColumnType("int");

                    b.Property<int>("IdColor")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProduct", "IdSize", "IdColor");

                    b.HasIndex("IdColor");

                    b.HasIndex("IdSize");

                    b.ToTable("Product_Size_Colors");

                    b.HasData(
                        new
                        {
                            IdProduct = 1,
                            IdSize = 1,
                            IdColor = 1,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 1,
                            IdSize = 2,
                            IdColor = 1,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 1,
                            IdSize = 3,
                            IdColor = 1,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 2,
                            IdSize = 2,
                            IdColor = 2,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 2,
                            IdSize = 2,
                            IdColor = 3,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 3,
                            IdSize = 1,
                            IdColor = 4,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 4,
                            IdSize = 1,
                            IdColor = 2,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 4,
                            IdSize = 1,
                            IdColor = 3,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 5,
                            IdSize = 2,
                            IdColor = 3,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 5,
                            IdSize = 2,
                            IdColor = 4,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 6,
                            IdSize = 1,
                            IdColor = 1,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 7,
                            IdSize = 1,
                            IdColor = 1,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 8,
                            IdSize = 1,
                            IdColor = 1,
                            State = 1,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 9,
                            IdSize = 1,
                            IdColor = 1,
                            State = 0,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 10,
                            IdSize = 1,
                            IdColor = 1,
                            State = 0,
                            Stock = 100
                        },
                        new
                        {
                            IdProduct = 11,
                            IdSize = 1,
                            IdColor = 1,
                            State = 1,
                            Stock = 100
                        });
                });

            modelBuilder.Entity("Domain.Entity.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Promotions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tết Dương Lịch",
                            EndDate = new DateTime(2022, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TDL001",
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = 1,
                            Value = 0.10000000000000001
                        },
                        new
                        {
                            Id = 2,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sinh nhật khách hàng",
                            EndDate = new DateTime(2022, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "BIRDAY",
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = 1,
                            Value = 0.14999999999999999
                        },
                        new
                        {
                            Id = 3,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Quốc tế phụ nữ 08-03",
                            EndDate = new DateTime(2022, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "WOMANDAY",
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = 2,
                            Value = 0.14999999999999999
                        },
                        new
                        {
                            Id = 4,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Tết Âm Lịch",
                            EndDate = new DateTime(2022, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "TET999",
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = 2,
                            Value = 0.20000000000000001
                        },
                        new
                        {
                            Id = 5,
                            CreatedById = 3,
                            CreatedDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Phụ Nữ Việt Nam 20-10",
                            EndDate = new DateTime(2022, 7, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "WOMANVN",
                            StartDate = new DateTime(2021, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            State = 3,
                            Value = 0.10000000000000001
                        });
                });

            modelBuilder.Entity("Domain.Entity.ShopInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("District")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wards")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ShopInfos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Số 1 Võ văn Ngân",
                            District = "TP.Thủ Đức",
                            Name = "Mango Clothes",
                            Province = "TP.HCM",
                            Wards = "Bình Thọ"
                        });
                });

            modelBuilder.Entity("Domain.Entity.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "S",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "M",
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "L",
                            State = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "XL",
                            State = 1
                        },
                        new
                        {
                            Id = 5,
                            Name = "XXL",
                            State = 1
                        });
                });

            modelBuilder.Entity("Domain.Entity.Staff", b =>
                {
                    b.Property<int>("IdAccount")
                        .HasColumnType("int");

                    b.Property<string>("CardIdentity")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PublicId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAccount");

                    b.HasIndex("CardIdentity", "Phone")
                        .IsUnique()
                        .HasFilter("[CardIdentity] IS NOT NULL AND [Phone] IS NOT NULL");

                    b.ToTable("Staff");

                    b.HasData(
                        new
                        {
                            IdAccount = 1,
                            CardIdentity = "123456786",
                            FirstName = "Giang",
                            LastName = "Võ Hồng Tiên",
                            Phone = "0328807778"
                        },
                        new
                        {
                            IdAccount = 2,
                            CardIdentity = "123456787",
                            FirstName = "Thảo",
                            LastName = "Nguyễn Thị",
                            Phone = "0328807776"
                        },
                        new
                        {
                            IdAccount = 3,
                            CardIdentity = "123456789",
                            FirstName = "Bảo",
                            LastName = "Lê Nguyễn Gia",
                            Phone = "0328807774"
                        },
                        new
                        {
                            IdAccount = 4,
                            CardIdentity = "123456788",
                            FirstName = "Yến",
                            LastName = "Lê Thị Ngọc",
                            Phone = "0328807775"
                        },
                        new
                        {
                            IdAccount = 5,
                            CardIdentity = "123456785",
                            FirstName = "Tiên",
                            LastName = "Trần Thủy",
                            Phone = "0328807773"
                        },
                        new
                        {
                            IdAccount = 6,
                            CardIdentity = "123456784",
                            FirstName = "Nam",
                            LastName = "Phạm Hoài",
                            Phone = "0328807772"
                        },
                        new
                        {
                            IdAccount = 10,
                            CardIdentity = "123456783",
                            FirstName = "Quân",
                            LastName = "Gian Thiệu",
                            Phone = "0328807771"
                        },
                        new
                        {
                            IdAccount = 11,
                            CardIdentity = "123456782",
                            FirstName = "Thư",
                            LastName = "Nguyễn Thị Minh",
                            Phone = "0328807770"
                        });
                });

            modelBuilder.Entity("Domain.Entity.TypeAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypeAccounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin",
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Staff",
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Shipper",
                            State = 1
                        },
                        new
                        {
                            Id = 4,
                            Name = "Customer",
                            State = 1
                        });
                });

            modelBuilder.Entity("Domain.Entity.TypeCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Point")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TypeCustomers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Gold",
                            Point = 0,
                            State = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Silver ",
                            Point = 0,
                            State = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bronze",
                            Point = 0,
                            State = 1
                        });
                });

            modelBuilder.Entity("Domain.Entity.Account", b =>
                {
                    b.HasOne("Domain.Entity.TypeAccount", "TypeAccount")
                        .WithMany("Accounts")
                        .HasForeignKey("IdTypeAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeAccount");
                });

            modelBuilder.Entity("Domain.Entity.Cart", b =>
                {
                    b.HasOne("Domain.Entity.Customer", "Customer")
                        .WithMany("Carts")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Entity.Customer", b =>
                {
                    b.HasOne("Domain.Entity.Account", "Account")
                        .WithOne("Customer")
                        .HasForeignKey("Domain.Entity.Customer", "IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entity.TypeCustomer", "TypeCustomer")
                        .WithMany("Customers")
                        .HasForeignKey("IdTypeCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TypeCustomer");
                });

            modelBuilder.Entity("Domain.Entity.DeliveryAddress", b =>
                {
                    b.HasOne("Domain.Entity.Customer", "Customer")
                        .WithMany("DeliveryAddresses")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Domain.Entity.Image", b =>
                {
                    b.HasOne("Domain.Entity.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Domain.Entity.Order", b =>
                {
                    b.HasOne("Domain.Entity.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerIdAccount");

                    b.HasOne("Domain.Entity.DeliveryAddress", "DeliveryAddress")
                        .WithMany()
                        .HasForeignKey("DeliveryAddressId");

                    b.HasOne("Domain.Entity.Promotion", "Promotion")
                        .WithMany("Orders")
                        .HasForeignKey("IdPromotion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Domain.Entity.Staff", "Staff")
                        .WithMany("Orders")
                        .HasForeignKey("IdStaff");

                    b.Navigation("Customer");

                    b.Navigation("DeliveryAddress");

                    b.Navigation("Promotion");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Domain.Entity.OrderDetail", b =>
                {
                    b.HasOne("Domain.Entity.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId");

                    b.HasOne("Domain.Entity.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entity.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId");

                    b.HasOne("Domain.Entity.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId");

                    b.Navigation("Color");

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Domain.Entity.Product", b =>
                {
                    b.HasOne("Domain.Entity.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Domain.Entity.Product_Size_Color", b =>
                {
                    b.HasOne("Domain.Entity.Color", "Color")
                        .WithMany("Product_Sizes_Color")
                        .HasForeignKey("IdColor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entity.Product", "Product")
                        .WithMany("Product_Sizes_Color")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entity.Size", "Size")
                        .WithMany("Product_Sizes_Color")
                        .HasForeignKey("IdSize")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Domain.Entity.Staff", b =>
                {
                    b.HasOne("Domain.Entity.Account", "Account")
                        .WithOne("Staff")
                        .HasForeignKey("Domain.Entity.Staff", "IdAccount")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("Domain.Entity.Account", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("Domain.Entity.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Domain.Entity.Color", b =>
                {
                    b.Navigation("Product_Sizes_Color");
                });

            modelBuilder.Entity("Domain.Entity.Customer", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("DeliveryAddresses");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entity.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Domain.Entity.Product", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Product_Sizes_Color");
                });

            modelBuilder.Entity("Domain.Entity.Promotion", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entity.Size", b =>
                {
                    b.Navigation("Product_Sizes_Color");
                });

            modelBuilder.Entity("Domain.Entity.Staff", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Domain.Entity.TypeAccount", b =>
                {
                    b.Navigation("Accounts");
                });

            modelBuilder.Entity("Domain.Entity.TypeCustomer", b =>
                {
                    b.Navigation("Customers");
                });
#pragma warning restore 612, 618
        }
    }
}
